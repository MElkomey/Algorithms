#include <iostream>
#include <algorithm>
#include <cmath>
using namespace std;






void print(int arr[], int size){
    for(int i=0;i<size;i++)
        cout<<arr[i]<<" ";
    cout<<endl;
}

///Heap sort algorithm , time complexity O(nlogn) ,space complexity O(1)


// applying max heap 
void heapify(int arr[],int n,int i)
{
int l=2*i+1;
int r=2*i+2;
int max=i;
if(l<n&&arr[l]>arr[max])
max=l;
if(r<n&&arr[r]>arr[max])
max=r;

if(max != i){
swap(arr[i],arr[max]);
heapify(arr,n,max);
}
}

void buildHeap(int arr[],int n)
{
    for (int i = n / 2 - 1; i >= 0; i--)
        heapify(arr, n, i);
}

void heapSort(int arr[], int n)
{

    buildHeap(arr, n);
    for (int i = n-1; i >=0; i--)
    {
        swap(arr[0], arr[i]);
        heapify(arr, i, 0);
    }

}


int main() {
    int arr[]={10,1,11,9,12,-5};
    int size=sizeof(arr)/sizeof(arr[0]);
    heapSort(arr, size);
        print(arr, size);
        
    return 0;
}